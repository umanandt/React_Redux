{"ast":null,"code":"var _jsxFileName = \"D:\\\\simple_redux\\\\src\\\\components\\\\Counter.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./Counter.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { counterActions } from '../store/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter);\n  const showCounter = useSelector(state => state.showCounter); // we use useselector not to get the whole value store\n  // but to select the spcific value from the redux store\n  // two function for increment and decrement\n  // we can export unique identifiers like increment for an example and \n  // import it to other file \n  // we can create smaller redcuer \n  // there is a solution for everything realted to redux - using redux toolkit\n  // redux is a separte thing it is not realted to react or any other programming langauge \n  // we are here using to solve to useContext issue or sharing data using this \n\n  const incrementHandler = () => {\n    //dispatch({ type: \"INCREMENT\" });\n    dispatch(counterActions.increment());\n  };\n\n  const incrementFiveHandler = () => {\n    // dispatch({ type: \"increase\", amount: 5 });\n    dispatch(counterActions.increment(5));\n  };\n\n  const decrementHandler = () => {\n    //dispatch({ type: \"DECREMENT\" });\n    dispatch(counterActions.decrement());\n  };\n\n  const toggleCounterHandler = () => {\n    // dispatch({ type: \"toggle\" });\n    dispatch(counterActions.toggle());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), showCounter && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementFiveHandler,\n        children: \"Increment By 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}; // doing same thing via class component\n//export default connect(mapStateToProps, mapDispatchToProps)(Counter);\n\n\n_s(Counter, \"K8sD1S6QxuN5wk6p12Sa6g8roDA=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["classes","useSelector","useDispatch","counterActions","Counter","dispatch","counter","state","showCounter","incrementHandler","increment","incrementFiveHandler","decrementHandler","decrement","toggleCounterHandler","toggle","value"],"sources":["D:/simple_redux/src/components/Counter.js"],"sourcesContent":["import classes from \"./Counter.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { counterActions } from '../store/index'\n\nconst Counter = () => {\n  const dispatch = useDispatch();\n  const counter = useSelector((state) => state.counter);\n  const showCounter = useSelector((state) => state.showCounter);\n  // we use useselector not to get the whole value store\n  // but to select the spcific value from the redux store\n  // two function for increment and decrement\n // we can export unique identifiers like increment for an example and \n // import it to other file \n\n\n // we can create smaller redcuer \n\n\n\n // there is a solution for everything realted to redux - using redux toolkit\n // redux is a separte thing it is not realted to react or any other programming langauge \n // we are here using to solve to useContext issue or sharing data using this \n \n\n\n  const incrementHandler = () => {\n    //dispatch({ type: \"INCREMENT\" });\n    dispatch(counterActions.increment());\n  };\n\n  const incrementFiveHandler = () => {\n   // dispatch({ type: \"increase\", amount: 5 });\n   dispatch(counterActions.increment(5));\n  };\n\n  const decrementHandler = () => {\n    //dispatch({ type: \"DECREMENT\" });\n    dispatch(counterActions.decrement());\n  };\n\n  const toggleCounterHandler = () => {\n   // dispatch({ type: \"toggle\" });\n   dispatch(counterActions.toggle());\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {showCounter && <div className={classes.value}>{counter}</div>}\n      <div>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={incrementFiveHandler}>Increment By 5</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\n// doing same thing via class component\n\n//export default connect(mapStateToProps, mapDispatchToProps)(Counter);\nexport default Counter;\n"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,gBAA/B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EACA,MAAMI,OAAO,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,OAAlB,CAA3B;EACA,MAAME,WAAW,GAAGP,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,WAAlB,CAA/B,CAHoB,CAIpB;EACA;EACA;EACD;EACA;EAGA;EAIA;EACA;EACA;;EAIC,MAAMC,gBAAgB,GAAG,MAAM;IAC7B;IACAJ,QAAQ,CAACF,cAAc,CAACO,SAAf,EAAD,CAAR;EACD,CAHD;;EAKA,MAAMC,oBAAoB,GAAG,MAAM;IAClC;IACAN,QAAQ,CAACF,cAAc,CAACO,SAAf,CAAyB,CAAzB,CAAD,CAAR;EACA,CAHD;;EAKA,MAAME,gBAAgB,GAAG,MAAM;IAC7B;IACAP,QAAQ,CAACF,cAAc,CAACU,SAAf,EAAD,CAAR;EACD,CAHD;;EAKA,MAAMC,oBAAoB,GAAG,MAAM;IAClC;IACAT,QAAQ,CAACF,cAAc,CAACY,MAAf,EAAD,CAAR;EACA,CAHD;;EAKA,oBACE;IAAM,SAAS,EAAEf,OAAO,CAACM,OAAzB;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGE,WAAW,iBAAI;MAAK,SAAS,EAAER,OAAO,CAACgB,KAAxB;MAAA,UAAgCV;IAAhC;MAAA;MAAA;MAAA;IAAA,QAFlB,eAGE;MAAA,wBACE;QAAQ,OAAO,EAAEG,gBAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,OAAO,EAAEE,oBAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAQ,OAAO,EAAEC,gBAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAQE;MAAQ,OAAO,EAAEE,oBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CArDD,C,CAuDA;AAEA;;;GAzDMV,O;UACaF,W,EACDD,W,EACIA,W;;;KAHhBG,O;AA0DN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}