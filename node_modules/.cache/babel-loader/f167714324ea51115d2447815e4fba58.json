{"ast":null,"code":"//import { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nimport CounterSlice from \"./CounterSlice\"; // we are using configure store instead of create store\n//because it can handle multiple reducer\n//import { createReducer } from 'redux';\n// there are two things that you can import\n// createSlice & create reducer that is provided by\n// redux toolkit to make coding easy and managebel\n// npm install @reduxjs/toolkit\n\n/* const counterReducer = (state = intialValue, action) => {\r\n  if (action.type === \"INCREMENT\") {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"DECREMENT\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"toggle\") {\r\n    return {\r\n      showCounter: !state.showCounter,\r\n      counter: state.counter,\r\n    };\r\n  }\r\n  return state;\r\n};*/\n//const store = createStore(counterSlice.reducer);\n\nconst store = configureStore({\n  reducer: {\n    counter: CounterSlice.reducer,\n    auth: loginSlice.reducer\n  }\n});\nexport const counterActions = CounterSlice.actions;\nexport const loginActions = loginSlice.actions;\nexport default store; // here we are not dispatching action to the data\n//here we are not subcribing to the data\n// here we have made reducer function and a store and passed the value of\n// function to the store (create reducer)","map":{"version":3,"names":["createSlice","configureStore","CounterSlice","store","reducer","counter","auth","loginSlice","counterActions","actions","loginActions"],"sources":["D:/simple_redux/src/store/index.js"],"sourcesContent":["//import { createStore } from \"redux\";\r\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\nimport CounterSlice from \"./CounterSlice\";\r\n\r\n// we are using configure store instead of create store\r\n//because it can handle multiple reducer\r\n\r\n//import { createReducer } from 'redux';\r\n// there are two things that you can import\r\n// createSlice & create reducer that is provided by\r\n// redux toolkit to make coding easy and managebel\r\n// npm install @reduxjs/toolkit\r\n\r\n\r\n\r\n/* const counterReducer = (state = intialValue, action) => {\r\n  if (action.type === \"INCREMENT\") {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"DECREMENT\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"toggle\") {\r\n    return {\r\n      showCounter: !state.showCounter,\r\n      counter: state.counter,\r\n    };\r\n  }\r\n  return state;\r\n};*/\r\n\r\n//const store = createStore(counterSlice.reducer);\r\n\r\nconst store = configureStore({\r\n  reducer: {counter: CounterSlice.reducer, auth: loginSlice.reducer},\r\n});\r\n\r\nexport const counterActions = CounterSlice.actions;\r\nexport const loginActions = loginSlice.actions;\r\n\r\nexport default store;\r\n\r\n// here we are not dispatching action to the data\r\n//here we are not subcribing to the data\r\n// here we have made reducer function and a store and passed the value of\r\n// function to the store (create reducer)\r\n"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,KAAK,GAAGF,cAAc,CAAC;EAC3BG,OAAO,EAAE;IAACC,OAAO,EAAEH,YAAY,CAACE,OAAvB;IAAgCE,IAAI,EAAEC,UAAU,CAACH;EAAjD;AADkB,CAAD,CAA5B;AAIA,OAAO,MAAMI,cAAc,GAAGN,YAAY,CAACO,OAApC;AACP,OAAO,MAAMC,YAAY,GAAGH,UAAU,CAACE,OAAhC;AAEP,eAAeN,KAAf,C,CAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}