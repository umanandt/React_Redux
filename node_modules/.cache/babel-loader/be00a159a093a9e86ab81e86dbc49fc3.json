{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from 'redux'; //import { createReducer } from 'redux';\n// there are two things that you can import \n// createSlice & create reducer that is provided by\n// redux toolkit to make coding easy and managebel\n// npm install @reduxjs/toolkit\n\nconst intialValue = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  // name could be anything\n  initialState: intialValue,\n  reducer: {\n    increment() {},\n\n    decrement() {},\n\n    // we have used four condition that's why we need \n    increase() {},\n\n    // four function in reducer - \n    toggleCounter() {}\n\n  }\n});\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialValue;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"INCREMENT\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"DECREMENT\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store; // here we are not dispatching action to the data \n//here we are not subcribing to the data\n// here we have made reducer function and a store and passed the value of\n// function to the store (create reducer)","map":{"version":3,"names":["createStore","createSlice","intialValue","counter","showCounter","name","initialState","reducer","increment","decrement","increase","toggleCounter","counterReducer","state","action","type","amount","store"],"sources":["D:/simple_redux/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\r\nimport { createSlice } from 'redux';\r\n\r\n\r\n//import { createReducer } from 'redux';\r\n// there are two things that you can import \r\n// createSlice & create reducer that is provided by\r\n// redux toolkit to make coding easy and managebel\r\n// npm install @reduxjs/toolkit\r\n\r\n\r\nconst intialValue = { counter: 0, showCounter: true}\r\n\r\n\r\ncreateSlice ({\r\n  name: 'counter', // name could be anything\r\n  initialState: intialValue,\r\n  reducer:{\r\n   increment(){},\r\n   decrement(){},   // we have used four condition that's why we need \r\n   increase(){},    // four function in reducer - \r\n   toggleCounter(){}\r\n  } \r\n})\r\n\r\n\r\n\r\nconst counterReducer = (state = intialValue, action) => {\r\n  if (action.type === \"INCREMENT\") {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if( action.type === \"increase\"){\r\n    return{\r\n        counter: state.counter + action.amount,\r\n        showCounter: state.showCounter,\r\n    }\r\n  }\r\n\r\n  if (action.type === \"DECREMENT\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if( action.type === \"toggle\"){\r\n    return {\r\n        showCounter: !state.showCounter,\r\n        counter: state.counter,\r\n    }\r\n  }\r\n  return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n\r\n// here we are not dispatching action to the data \r\n//here we are not subcribing to the data\r\n// here we have made reducer function and a store and passed the value of\r\n// function to the store (create reducer)\r\n\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,OAA5B,C,CAGA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,WAAW,GAAG;EAAEC,OAAO,EAAE,CAAX;EAAcC,WAAW,EAAE;AAA3B,CAApB;AAGAH,WAAW,CAAE;EACXI,IAAI,EAAE,SADK;EACM;EACjBC,YAAY,EAAEJ,WAFH;EAGXK,OAAO,EAAC;IACPC,SAAS,GAAE,CAAE,CADN;;IAEPC,SAAS,GAAE,CAAE,CAFN;;IAEU;IACjBC,QAAQ,GAAE,CAAE,CAHL;;IAGU;IACjBC,aAAa,GAAE,CAAE;;EAJV;AAHG,CAAF,CAAX;;AAaA,MAAMC,cAAc,GAAG,YAAiC;EAAA,IAAhCC,KAAgC,uEAAxBX,WAAwB;EAAA,IAAXY,MAAW;;EACtD,IAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;IAC/B,OAAO;MACLZ,OAAO,EAAEU,KAAK,CAACV,OAAN,GAAgB,CADpB;MAELC,WAAW,EAAES,KAAK,CAACT;IAFd,CAAP;EAID;;EAED,IAAIU,MAAM,CAACC,IAAP,KAAgB,UAApB,EAA+B;IAC7B,OAAM;MACFZ,OAAO,EAAEU,KAAK,CAACV,OAAN,GAAgBW,MAAM,CAACE,MAD9B;MAEFZ,WAAW,EAAES,KAAK,CAACT;IAFjB,CAAN;EAID;;EAED,IAAIU,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;IAC/B,OAAO;MACLZ,OAAO,EAAEU,KAAK,CAACV,OAAN,GAAgB,CADpB;MAELC,WAAW,EAAES,KAAK,CAACT;IAFd,CAAP;EAID;;EAED,IAAIU,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA6B;IAC3B,OAAO;MACHX,WAAW,EAAE,CAACS,KAAK,CAACT,WADjB;MAEHD,OAAO,EAAEU,KAAK,CAACV;IAFZ,CAAP;EAID;;EACD,OAAOU,KAAP;AACD,CA7BD;;AA+BA,MAAMI,KAAK,GAAGjB,WAAW,CAACY,cAAD,CAAzB;AAEA,eAAeK,KAAf,C,CAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}